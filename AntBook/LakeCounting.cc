#include <iostream>

const int N = 10;
const int M = 12;
char field[][12] = {
        {'W','.','.','.','.','.','.','.','.','W','W','.'},
        {'.','W','W','W','.','.','.','.','.','.','W','W'},
        {'.','.','.','.','W','W','.','.','.','W','W','.'},
        {'.','.','.','.','.','.','.','.','.','W','W','.'},
        {'.','.','.','.','.','.','.','.','.','W','.','.'},
        {'.','.','W','.','.','.','.','.','.','W','.','.'},
        {'.','W','.','W','.','.','.','.','.','W','W','.'},
        {'W','.','W','.','W','.','.','.','.','.','W','.'},
        {'.','W','.','W','.','.','.','.','.','.','W','.'},
        {'.','.','W','.','.','.','.','.','.','.','W','.'},
};

void dfs(int y, int x)
{
    field[y][x] = '.';

    for(int dy = -1; dy <= 1; dy++) {
        for(int dx = -1; dx <= 1; dx++) {
            int xx = x + dx, yy = y + dy;
            if(0 <= xx && xx < M && 0 <= dy && dy < N && field[yy][xx] == 'W') dfs(yy, xx);
        }
    }
    return;
}

int solve(void)
{
    int ret = 0;
    for(int i = 0; i < N; i++) {
        for(int j = 0; j < M; j++) {
            if(field[i][j] == 'W'){
                dfs(i, j);
                ret++;
            }
        }
    }
    return ret;
}

int main()
{
    std::cout << solve() << std::endl;
}
